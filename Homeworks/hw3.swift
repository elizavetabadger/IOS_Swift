 /*
 1.	Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать 
 чай (можно представить ее в виде массива видов чая, которые хотят заказать). 
 Необходимо последовательно выводить в консоль сколько заплатит покупатель 
 ( необходимо вывести его номер по порядку, чай, который он заказал и стоимость)*/

enum Tea : String {
    case black = "Черный чай"
    case green = "Зеленый чай"
    case fruit = "Фруктовый чай"
}

var teaPrice: [Tea:Int] = [.black: 30, .green: 40, .fruit: 50]
 
var teaQueue: [Tea] = [.black, .green, .green, .black, .fruit]
    
    for element: Tea in teaQueue {
        print(teaPrice[element]!)
        
    }

 
/*2.	Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. 
Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, 
не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию*/

 let arr1 = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
 let arr2 = arr1.compactMap{$0}.filter{$0 != 0 && $0 != 4}.sorted(by: <)
 print (arr2)


/*3.	Написать функцию, которая на вход принимает целое число, а возвращает массив, 
который сформирован по следующим правилам: количество элементов соответствует переданному числу, 
массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза.*/

func arrFunc (arr1 : Int) -> [Int]{
    var arr:[Int] = []
    for i in 1...arr1 {
        arr.append(i*2)
    }
    return arr
}

print (arrFunc(arr1:6))
